# Before going further, make sure you have keys.
#    gpg --gen-key
#    mkdir -p /openstack/aptly
# check the armor and replace armor value below
#    gpg --export-secret-keys --armor CB6E9D87 > /openstack/aptly.private.key
#    gpg --export --armor CB6E9D87 > /openstack/aptly.public.key
- name: Install aptly
  hosts: localhost
  connection: local
  vars_files:
    - artifacting-vars.yml
    - aptly-vars.yml
  vars:
    rabbitmq_package_url: "{{ _rabbitmq_package_url }}"
  #role will install aptly and update the mirrors
  roles:
    - infOpen.aptly
  # update repos
  post_tasks:
    - include_vars: "{{ ansible_roles_folder }}/rabbitmq_server/vars/debian.yml"
      failed_when: false
    - name: Verify if rabbitmq is already there, in case of re-run for the same artifact version
      command: su - aptly -c "aptly repo search rabbitmq-downloaded-packages-{{ artifacts_version }}-ALL 'Name (rabbitmq-server), Version ({{ _rabbitmq_package_version }})'"
      register: rabbitmq_search
      failed_when: false
      changed_when: false
    - name: Fetch Rabbitmq to feed frozen repo
      get_url:
        # from: https://raw.githubusercontent.com/openstack/openstack-ansible-rabbitmq_server/stable/newton/vars/debian.yml
        url: "{{ _rabbitmq_package_url }}"
        dest: "/tmp/{{ _rabbitmq_package_url | basename }}"
        sha256sum: "{{ _rabbitmq_package_sha256 }}"
      when: rabbitmq_search.stdout.find(_rabbitmq_package_version) == -1
      register: rabbitmq_download
      until: rabbitmq_download|success
      retries: 5
      delay: 5
    - name: Upload Package
      command: su - aptly -c "aptly repo add rabbitmq-downloaded-packages-{{ artifacts_version }}-ALL /tmp/{{ _rabbitmq_package_url | basename }}"
      register: aptly_repo_add_output
      when: rabbitmq_search.stdout.find(_rabbitmq_package_version) == -1
    - debug:
        msg: "{{ aptly_repo_add_output }}"
