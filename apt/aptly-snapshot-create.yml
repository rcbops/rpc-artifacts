---
# Copyright 2014-2017, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- assert:
    that:
      - rpc_release is defined
      - distribution_release is defined
    msg: You need to define what you are releasing!

- name: list all the repos/mirrors for this distribution that arent in exclude list
  shell: "aptly {{ item }} list -raw | grep -e {{ distribution_release }} -e ALL {% if aptly_dont_snapshot_list is defined and aptly_dont_snapshot_list | length > 0 %}|grep -v -e {{ aptly_dont_snapshot_list | join(' -e ') }} {% endif %}"
  with_items:
    - repo
    - mirror
  register: aptly_repo_list
  changed_when: false

- name: Fetch snapshot list
  shell: |
    aptly snapshot list -raw | grep "{{ rpc_release }}"
  args:
    executable: /bin/bash
  register: aptly_existing_snapshots_list
  failed_when: false
  changed_when: false

- name: Fetch published list
  shell: |
    aptly publish list -raw | grep "{{ rpc_release }}-{{ distribution_release }}$"
  args:
    executable: /bin/bash
  register: aptly_existing_published_snapshots_list
  failed_when: false
  changed_when: false

- name: Delete old publications for this distro/artifacts version
  shell: "aptly publish drop {{ item.split(' ')[1] }} {{ item.split(' ')[0] }}"
  with_items: "{{ aptly_existing_published_snapshots_list.stdout_lines }}"
  when:
    - "lookup('ENV','RECREATE_SNAPSHOTS') | bool"
  failed_when: false

- name: Delete old merged snapshots for this distro/artifacts version
  shell: "aptly snapshot drop {{ item }}"
  with_items: "{{ aptly_existing_snapshots_list.stdout_lines }}"
  when:
    - "lookup('ENV','RECREATE_SNAPSHOTS') | bool"
    - "item.find('^miko-{{ rpc_release }}-{{ distribution_release }}') != -1"
  failed_when: false

- name: Delete old snapshots for this distro/artifacts version
  shell: "aptly snapshot drop {{ item }}"
  with_items: "{{ aptly_existing_snapshots_list.stdout_lines }}"
  when:
    - "lookup('ENV','RECREATE_SNAPSHOTS') | bool"
    - "item | match('^slushie-{{ rpc_release }}-[a-zA-z]+-.*-({{ distribution_release }}|ALL)$')"
  failed_when: false

- name: Froze the mirrors/repos by snapshot creation
  shell: "aptly snapshot create slushie-{{ rpc_release }}-{{ item.1 }} from {{ item.0.item }} {{ item.1 }}"
  register: aptly_snapshot_create
  with_subelements:
    - "{{ aptly_repo_list.results }}"
    - "stdout_lines"
  failed_when:
    - "aptly_snapshot_create.rc != 0"
    - "aptly_snapshot_create.stderr.find('already exists') == -1"
  changed_when: aptly_snapshot_create.stderr.find('already exists') == -1

- name: Fetch snapshot list
  shell: "aptly snapshot list -raw | grep slushie-{{ rpc_release }}"
  register: aptly_snapshot_list
  changed_when: false

- name: Output the full list of tuples distribution/artifact version
  debug:
    msg: "Full list of snapshots for this distribution/artifact version: {{ aptly_snapshot_list.stdout_lines }}"

- name: Merge the snapshots together
  shell: "aptly snapshot merge {{ aptly_snapshot_merge_flags }} miko-{{ rpc_release }}-{{ distribution_release }} {{ aptly_miko_mapping[rpc_series][distribution_release] | join(' ') }}"
  register: aptly_snapshot_merge_create
  failed_when:
    - "aptly_snapshot_merge_create.rc != 0"
    - "aptly_snapshot_merge_create.stderr.find('already exists') == -1"
  changed_when:
    - "aptly_snapshot_merge_create.stderr.find('already exists') == -1"
  tags:
    - aptly_snapshot_merge
    - aptly_snapshot
